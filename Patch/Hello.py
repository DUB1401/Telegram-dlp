from Source.Core.GetText import _

from dublib.TelebotUtils import UserData
from telebot import TeleBot, types

class PatchReplyKeyboards:
	"""–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Reply-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""

	def __init__(self):
		"""–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä Reply-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""

		pass

	def main(self) -> types.ReplyKeyboardMarkup:
		"""–°—Ç—Ä–æ–∏—Ç –∫–Ω–æ–ø–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""

		Menu = types.ReplyKeyboardMarkup(resize_keyboard = True)
		Info = types.KeyboardButton(_("‚ÑπÔ∏è –ò–Ω—Ñ–∞"))
		Rename = types.KeyboardButton(_("‚ôªÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è"))
		Support = types.KeyboardButton(_("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
		Share = types.KeyboardButton(_("üì¢ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏"))
		Menu.add(Info, Rename, Support, Share, row_width = 1)

		return Menu

def Hello(bot: TeleBot, user: UserData):
	Name = None
	try:
		Name = user.get_property("name")
	except: pass

	Devices = types.InlineKeyboardMarkup()
	iPhone = types.InlineKeyboardButton("iPhone üçé", callback_data = "device_iphone")
	Android = types.InlineKeyboardButton("Android ü§ñ", callback_data = "device_android")
	Devices.add(Android, iPhone, row_width = 2)

	if not Name:
		bot.send_message(user.id, _("–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —á—Ç–æ —Ç—ã –æ–±—Ä–∞—Ç–∏–ª—Å—è –∏–º–µ–Ω–Ω–æ –∫–æ –º–Ω–µ! ‚úäÔ∏è"))
		bot.send_message(user.id, _("–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–µ–±—è, –≤–æ–∏–Ω?"))
		user.set_expected_type("user_name")

	else:
		Message = bot.send_message(user.id, _("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é,") + f" {Name}!")
		user.set_temp_property("remove_message", Message.id)
		bot.send_message(user.id, _("–°–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–µ —É —Ç–µ–±—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ?"), reply_markup = Devices)

def AnswerName(bot: TeleBot, user: UserData, message: types.Message) -> bool:
	IsAnswered = False

	if user.expected_type == "user_name":
		Name = None
		try:
			Name = user.get_property("name")
		except: pass

		IsAnswered = True
		user.set_property("name", message.text)
		user.set_expected_type(None)
		Message = bot.send_message(user.id, _("–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è,") + f" {message.text}!)")
		user.set_temp_property("remove_message", Message.id)

		Devices = types.InlineKeyboardMarkup()
		iPhone = types.InlineKeyboardButton("iPhone üçé", callback_data = "device_iphone")
		Android = types.InlineKeyboardButton("Android ü§ñ", callback_data = "device_android")
		Devices.add(Android, iPhone, row_width = 2)
		if Name: bot.send_message(user.id, _("–ê —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —è –Ω–∞–¥–µ—é—Å—å —Ç—ã –Ω–µ —Å–º–µ–Ω–∏–ª?"), reply_markup = Devices)
		else: bot.send_message(user.id, _("–°–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫–æ–µ —É —Ç–µ–±—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ?"), reply_markup = Devices)

	return IsAnswered