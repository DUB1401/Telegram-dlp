from dublib.Methods import CheckPythonMinimalVersion, MakeRootDirectories, ReadJSON, RemoveFolderContent, WriteJSON
from Source.Functions import BuildMenu, BuildResolutions, UpdatePremium
from dublib.Terminalyzer import ArgumentsTypes, Command, Terminalyzer
from dublib.StyledPrinter import StyledPrinter, Styles
from dublib.TelebotUtils import UsersManager
from Source.Registrator import Registrator
from Source.MessageBox import MessageBox
from Source.MediaCore import MediaCore
from urllib.parse import urlparse
from Source.YtDlp import YtDlp
from telebot import types
from time import sleep

import telebot
import os

#==========================================================================================#
# >>>>> –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–ö–†–ò–ü–¢–ê <<<<< #
#==========================================================================================#

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏ Python.
CheckPythonMinimalVersion(3, 10)
# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
MakeRootDirectories(["Data/Storage", "Files"])

#==========================================================================================#
# >>>>> –ß–¢–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö <<<<< #
#==========================================================================================#

# –ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
Settings = ReadJSON("Settings.json")
# –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω, –≤—ã–±—Ä–æ—Å–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.
if type(Settings["token"]) != str or Settings["token"].strip() == "": raise Exception("Invalid Telegram bot token.")

#==========================================================================================#
# >>>>> –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê –ö–û–ú–ê–ù–î <<<<< #
#==========================================================================================#

# –°–ø–∏—Å–æ–∫ –æ–ø–∏—Å–∞–Ω–∏–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥.
CommandsList = list()

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: dump.
COM_dump = Command("dump")
COM_dump.add_argument(ArgumentsTypes.All, important = True)
COM_dump.add_flag_position(["compress"])
CommandsList.append(COM_dump)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: login.
COM_login = Command("login")
COM_login.add_argument(ArgumentsTypes.All, important = True)
COM_login.add_argument(ArgumentsTypes.All, important = True)
COM_login.add_argument(ArgumentsTypes.All, important = True)
CommandsList.append(COM_login)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
CAC = Terminalyzer()
# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–º–∞–Ω–¥. 
CommandDataStruct = CAC.check_commands(CommandsList)

#==========================================================================================#
# >>>>> –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ú–ê–ù–î <<<<< #
#==========================================================================================#

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: dump.
if CommandDataStruct != None and "dump" == CommandDataStruct.name:
	# –°–æ—Å—Ç–æ—è–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –∫–æ–º–ø—Ä–µ—Å—Å–∏—é.
	Compression = True if "compress" in CommandDataStruct.flags else False
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–¥–∏–∞-—è–¥—Ä–∞.
	MediaCoreObject = MediaCore(Settings)
	MediaCoreObject.authorizate()
	MediaCoreObject.upload(CommandDataStruct.arguments[0], Compression)
	MediaCoreObject.close()
	
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: login.
elif CommandDataStruct != None and "login" == CommandDataStruct.name:
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
	RegistratorObject = Registrator()
	# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑ –∫–æ–¥–∞.
	Result = RegistratorObject.login(CommandDataStruct.arguments[0], CommandDataStruct.arguments[1], CommandDataStruct.arguments[2])
	# –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω –∫–æ–¥, –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å –∫–æ–¥–æ–º.
	if Result == -1: Result = RegistratorObject.login(CommandDataStruct.arguments[0], CommandDataStruct.arguments[1], CommandDataStruct.arguments[2], input("Enter security code: "))

	# –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞.
	if Result == 0:
		# –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.
		StyledPrinter("Account successfully logined.", text_color = Styles.Colors.Green)
		
	else:
		# –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å: –æ—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞.
		StyledPrinter("Unable to login account.", text_color = Styles.Colors.Red)
	
# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞.
else:
	# –¢–æ–∫–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Ç–µ–ª–µ–≥–∞–º–º.
	Bot = telebot.TeleBot(Settings["token"])
	# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.
	VideoManagerObject = YtDlp("yt-dlp", proxy = Settings["proxy"] if Settings["proxy"] else None)
	MediaCoreObject = MediaCore(Settings)
	UsersManagerObject = UsersManager("Data/Users")
	MessageBoxObject = MessageBox()
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: about.
	@Bot.message_handler(commands = ["about"])
	def Command(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = UsersManagerObject.auth(Message.from_user)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ.
		Bot.send_message(
			chat_id = Message.chat.id,
			text = MessageBoxObject.get("about", language = User.language),
			parse_mode = "MarkdownV2",
			disable_web_page_preview = True
		)
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: start.
	@Bot.message_handler(commands = ["start"])
	def Command(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = UsersManagerObject.auth(Message.from_user)
		User.create_property("compression", True)
		User.create_property("video", None, True)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
		Bot.send_message(
			chat_id = Message.chat.id,
			text = MessageBoxObject.get("hello", language = User.language),
			parse_mode = "MarkdownV2",
			disable_web_page_preview = True,
			reply_markup = BuildMenu(User, MessageBoxObject)
		)
		
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
	@Bot.message_handler(content_types = ["text"])
	def Link(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = UsersManagerObject.auth(Message.from_user)
		
		# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∂–∞—Ç–∏—è.
		if Message.text == MessageBoxObject.get("button-compression-off", language = User.language):
			# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—Ä–µ—Å—Å–∏–∏.
			User.set_property("compression", False)
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å–∂–∞—Ç–∏–µ –≤–∏–¥–µ–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ.
			Bot.send_message(
				chat_id = Message.chat.id,
				text = MessageBoxObject.get("compression-off", language = User.language),
				parse_mode = "MarkdownV2",
				reply_markup = BuildMenu(User, MessageBoxObject)
			)
			
		# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–∂–∞—Ç–∏—è.
		elif Message.text == MessageBoxObject.get("button-compression-on", language = User.language):
			# –í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—Ä–µ—Å—Å–∏–∏.
			User.set_property("compression", True)
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å–∂–∞—Ç–∏–µ –≤–∏–¥–µ–æ –≤–∫–ª—é—á–µ–Ω–æ.
			Bot.send_message(
				chat_id = Message.chat.id,
				text = MessageBoxObject.get("compression-on", language = User.language),
				parse_mode = "MarkdownV2",
				reply_markup = BuildMenu(User, MessageBoxObject)
			)
			
		# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Å—ã–ª–∫–æ–π.
		elif urlparse(Message.text).scheme:
				
			# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª.
			if not User.get_property("video"):
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ.
				MessageID = Bot.send_message(
					chat_id = Message.chat.id,
					text = MessageBoxObject.get("dumping", "downloading", language = User.language),
					parse_mode = "MarkdownV2"
				).id
				# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
				Dump = VideoManagerObject.get_info(Message.text)

				# –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ.
				if Dump != None:
					# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ.
					Bot.delete_message(Message.chat.id, MessageID)
					# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.
					Resolutions = VideoManagerObject.get_resolutions(Dump)
					ResolutionsList = list(Resolutions.keys())
					ResolutionsList.reverse()
					# –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏.
					User.set_property("video", {"link": Message.text, "id": Dump["id"], "formats": Resolutions, "domain": Dump["webpage_url_domain"], "dump": Dump})
					# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.
					MessageID = Bot.send_message(
						chat_id = Message.chat.id,
						text = MessageBoxObject.get("choose-resolution", language = User.language),
						parse_mode = "MarkdownV2",
						reply_markup = BuildResolutions(ResolutionsList)
					).id
					
				else:
					# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.
					Bot.edit_message_text(
						text = MessageBoxObject.get("bad-dumping", "error", language = User.language),
						chat_id = Message.chat.id,
						message_id = MessageID,
						parse_mode = "MarkdownV2"
					)				
	
			else:
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
				Bot.send_message(
					chat_id = Message.chat.id,
					text = MessageBoxObject.get("already-downloading", "error", language = User.language),
					parse_mode = "MarkdownV2"
				)

		# –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ.
		elif Message.text.replace("x", "").lstrip("üé¨ üéµ").isdigit() or "audio only" in Message.text:
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤—ã–±—Ä–∞–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ.
			MessageID = Bot.send_message(
				chat_id = Message.chat.id,
				text = MessageBoxObject.get("preparing", language = User.language),
				parse_mode = "MarkdownV2",
				reply_markup = BuildMenu(User, MessageBoxObject)
			).id
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–∞—á–∞—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.
			MessageID = Bot.send_message(
				chat_id = Message.chat.id,
				text = MessageBoxObject.get("downloading", "downloading", language = User.language),
				parse_mode = "MarkdownV2"
			).id
			# –í—ã–±—Ä–∞–Ω–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ.
			Resolution = Message.text.strip("üé¨ üéµ")
			# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ.
			Video = User.get_property("video")
			# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
			FileOnServerID = MediaCoreObject.check_file_on_storage(Video["domain"], Video["id"], Resolution, User.get_property("compression"))
			
			# –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
			if FileOnServerID:
				# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–∏–¥–µ–æ. 
				Bot.copy_message(Message.chat.id, Settings["trusted-source-id"], FileOnServerID, caption = "")
				# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞.
				Bot.delete_message(Message.chat.id, MessageID)

			else:
				# –°–æ—Å—Ç–æ—è–Ω–∏–µ: —É—Å–ø–µ—à–Ω–∞ –ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞.
				IsDownloaded = None

				# –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫–∞.
				if "audio only" in Message.text:
					# –°—Ç–∞—Ä—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞—É–¥–∏–¥–æ—Ä–æ–∂–∫–∏.
					IsDownloaded = VideoManagerObject.download_audio(Video["link"], f"Files/{User.id}", Video["id"])

				else:
					# –°—Ç–∞—Ä—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ.
					IsDownloaded = VideoManagerObject.download_video(Video["link"], f"Files/{User.id}", Video["id"], Video["formats"][Resolution])

				# –ï—Å–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ.
				if IsDownloaded:
					# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è.
					WriteJSON(f"Files/{User.id}/description.json", {"link": Video["link"], "id": Video["id"], "domain": Video["domain"], "resolution": Resolution})
					# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
					Bot.edit_message_text(
						text = MessageBoxObject.get("uploading", "downloading", language = User.language),
						chat_id = Message.chat.id,
						message_id = MessageID,
						parse_mode = "MarkdownV2"
					)
					# –î–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ.
					Dump = User.get_property("video")["dump"]
					# –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞, —Å–æ–∑–¥–∞—Ç—å –µ—ë.
					if not os.path.exists("Data/Storage/" + Dump["webpage_url_domain"]): os.makedirs("Data/Storage/" + Dump["webpage_url_domain"])

					# –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
					if not os.path.exists("Data/Storage/" + Dump["webpage_url_domain"] + "/" + Dump["id"] + ".json"):
						# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.
						WriteJSON("Data/Storage/" + Dump["webpage_url_domain"] + "/" + Dump["id"] + ".json", {"compressed": {}, "not-compressed": {}, "dump": Dump})

					# –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ Telegram.
					ExitCode = MediaCoreObject.dump(Message.from_user.id, User.get_property("compression"))
					
					# –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø–µ—à–Ω–∞.
					if ExitCode == 0:
						# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
						Bot.edit_message_text(
							text = MessageBoxObject.get("sended", "downloading", language = User.language),
							chat_id = Message.chat.id,
							message_id = MessageID,
							parse_mode = "MarkdownV2"
						)
				
					elif ExitCode == -1:
						# –†–∞—Å—á—ë—Ç –ª–∏–º–∏—Ç–∞.
						Limit = 4 if Settings["premium"] else 2
						# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤–∏–¥–µ–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç.
						Bot.edit_message_text(
							text = MessageBoxObject.get("too-large", "error", {"limit": Limit}, language = User.language),
							chat_id = Message.chat.id,
							message_id = MessageID,
							parse_mode = "MarkdownV2"
						)
				
					else:
						# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ.
						Bot.edit_message_text(
							text = MessageBoxObject.get("unable-upload", "error", language = User.language),
							chat_id = Message.chat.id,
							message_id = MessageID,
							parse_mode = "MarkdownV2"
						)

				else:
					# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.
					Bot.edit_message_text(
						text = MessageBoxObject.get("unable-download", "error", language = User.language),
						chat_id = Message.chat.id,
						message_id = MessageID,
						parse_mode = "MarkdownV2"
					)
			
			# –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏.
			User.set_property("video", None)
		
		else:
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É.
			Bot.send_message(
				chat_id = Message.chat.id,
				text = MessageBoxObject.get("uploading", "downloading", language = User.language),
				parse_mode = "MarkdownV2",
				reply_markup = BuildMenu(User, MessageBoxObject)
			)
	
	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ.					
	@Bot.message_handler(content_types=["audio"])
	def Video(Message: types.Message):
		
		# –ï—Å–ª–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏—Å–ª–∞–ª –≤–∏–¥–µ–æ.
		if Message.from_user.id == Settings["trusted-source-id"]: 
			# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ Premium-—Å—Ç–∞—Ç—É—Å–µ.
			UpdatePremium(Settings, Message.from_user)
			# –ê—Ä–≥—É–º–µ–Ω—Ç—ã –≤–∏–¥–µ–æ.
			Args = Message.caption.split("\n")
			# –§–∞–π–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.
			StorageData = None

			# –ü–æ–∫–∞ —Ñ–∞–π–ª –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω.
			while not StorageData:

				try:
					# –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞.
					StorageData = ReadJSON("Data/Storage/" + Args[1] + "/" + Args[2] + ".json")

				except: sleep(1)

			# –í–Ω–µ—Å–µ–Ω–∏–µ –≤ —Ä–µ–µ—Å—Ç—Ä ID –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞.
			StorageData["compressed"][Args[3]] = Message.id
			StorageData["not-compressed"][Args[3]] = Message.id
			# –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
			WriteJSON("Data/Storage/" + Args[1] + "/" + Args[2] + ".json", StorageData)
			# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
			Bot.copy_message(Args[0], Message.chat.id, Message.id, caption = "")
			# –û—á–∏—Ç—Å–∫–∞ –±—É—Ñ–µ—Ä–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
			RemoveFolderContent("Files/" + Args[0])

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ (—Å–æ —Å–∂–∞—Ç–∏–µ–º –∏ –±–µ–∑ —Å–∂–∞—Ç–∏—è).					
	@Bot.message_handler(content_types=["audio", "document", "video"])
	def Video(Message: types.Message):
		
		# –ï—Å–ª–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏—Å–ª–∞–ª –≤–∏–¥–µ–æ.
		if Message.from_user.id == Settings["trusted-source-id"]: 
			# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ Premium-—Å—Ç–∞—Ç—É—Å–µ.
			UpdatePremium(Settings, Message.from_user)
			# –ê—Ä–≥—É–º–µ–Ω—Ç—ã –≤–∏–¥–µ–æ.
			Args = Message.caption.split("\n")
			# –í—ã–±–æ—Ä –∫–ª—é—á–∞ –¥–æ—Å—Ç—É–ø–∞.
			CompressionKey = "compressed" if UsersManagerObject.get_user(Args[0]).get_property("compression") else "not-compressed"
			# –§–∞–π–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.
			StorageData = None

			# –ü–æ–∫–∞ —Ñ–∞–π–ª –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–Ω.
			while not StorageData:

				try:
					# –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞.
					StorageData = ReadJSON("Data/Storage/" + Args[1] + "/" + Args[2] + ".json")

				except: sleep(1)
				
			# –í–Ω–µ—Å–µ–Ω–∏–µ –≤ —Ä–µ–µ—Å—Ç—Ä ID –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞.
			StorageData[CompressionKey][Args[3]] = Message.id
			# –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
			WriteJSON("Data/Storage/" + Args[1] + "/" + Args[2] + ".json", StorageData)
			# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
			Bot.copy_message(Args[0], Message.chat.id, Message.id, caption = "")
			# –û—á–∏—Ç—Å–∫–∞ –±—É—Ñ–µ—Ä–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
			RemoveFolderContent("Files/" + Args[0])
		
	# –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ Telegram.
	Bot.infinity_polling()